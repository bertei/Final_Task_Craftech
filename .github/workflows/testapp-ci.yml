name: TestApp-CI

on:
  push:
    branches:
      - dev
      - prod

jobs:
  DockerImage-Build-Push:
    runs-on: ubuntu-latest ##runner OS
    steps:
      - name: Checkout ##runner git clone
        uses: actions/checkout@v3
      - name: Set up QEMU ##used to provide emulated environments for builiding on architecture other than the host arch
        uses: docker/setup-qemu-action@v2
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      #- name: Build Backend Image and Push to Dockerhub
      #  uses: docker/build-push-action@v3
      #  with:
      #    file: ./test-app-backend/Dockerfile
      #    context: .
      #    push: true
      #    tags: bernaa77/testapp-backend:${{ github.ref_name }}
      - name: Build Frontend Image and Push to Dockerhub
        uses: docker/build-push-action@v3
        with:
          file: ./test-app-frontend/Dockerfile
          context: .
          push: true
          tags: bernaa77/testapp-frontend:${{ github.ref_name }}_${{ github.run_id }}
  
  Minikube-Helm-Setup-Dev:
    needs: [ DockerImage-Build-Push ] ##This Job will only run after "docker-build-push" job is executed sucesfully.
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/dev') ##This Job will run only in 'dev' branch.
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Minikube Setup
        uses: medyagh/setup-minikube@master
      #- name: Minikube Ingress addon installation
      #  run: |
      #    minikube addons enable ingress
      #    sleep 10
      #    kubectl get pods -n ingress-nginx
      - name: Helm Setup
        uses: azure/setup-helm@v3
        with:
          version: '3.9.0'
      #- name: Set up etc/hosts
      #  run : |
      #    sudo echo "$(minikube ip) testapp.dev" | sudo tee -a /etc/hosts
      #- name: Install Helm Chart
      #  run:  ./testapp-chart-dynamic/helm_install.sh
      # helm upgrade --install -f testapp-chart-dynamic/values/testapp_backend-values.yml --set appImageTag=test02 testapp-back-microservice testapp-chart-dynamic --timeout "3m0s"
      - name: Test Helm backend
        run: |
          helm upgrade --install -f testapp-chart-dynamic/values/testapp_frontend-values.yml --set appImageTag=${{ github.ref_name }}_${{ github.run_id }} testapp-front-microservice testapp-chart-dynamic --timeout "3m0s"      
      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '80s'
      - name: Describe pod
        run : |
          POD=$(kubectl get pod -l app=testapp-frontend -o jsonpath="{.items[0].metadata.name}")
          kubectl describe pod $POD

  Minikube-Helm-Setup-Prod:
    needs: [ DockerImage-Build-Push ] ##This Job will only run after "docker-build-push" job is executed sucesfully.
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/prod') ##This Job will run only in 'dev' branch.
    environment:
      name: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Minikube Setup
        uses: medyagh/setup-minikube@master
      #- name: Minikube Ingress addon installation
      #  run: |
      #    minikube addons enable ingress
      #    sleep 10
      #    kubectl get pods -n ingress-nginx
      - name: Helm Setup
        uses: azure/setup-helm@v3
        with:
          version: '3.9.0'
      #- name: Set up etc/hosts
      #  run : |
      #    sudo echo "$(minikube ip) testapp.dev" | sudo tee -a /etc/hosts
      #- name: Install Helm Chart
      #  run:  ./testapp-chart-dynamic/helm_install.sh
      # helm upgrade --install -f testapp-chart-dynamic/values/testapp_backend-values.yml --set appImageTag=test02 testapp-back-microservice testapp-chart-dynamic --timeout "3m0s"
      - name: Test Helm backend
        run: |
          helm upgrade --install -f testapp-chart-dynamic/values/testapp_frontend-values.yml --set appImageTag=${{ github.ref_name }}_${{ github.run_id }} testapp-front-microservice testapp-chart-dynamic --timeout "3m0s"      
      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '80s'
      - name: Describe pod
        run : |
          POD=$(kubectl get pod -l app=testapp-frontend -o jsonpath="{.items[0].metadata.name}")
          kubectl describe pod $POD

          